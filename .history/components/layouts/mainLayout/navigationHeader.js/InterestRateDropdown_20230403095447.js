import Link from 'next/link';
import { useRouter } from 'next/router';
import { useState, useRef } from 'react';
import { useOnHoverOutside } from '@utils/useOnHoverOutside';

function Menu({ isMenuDropDownOpen }) {
	return (
		<div
			className={`${
				isMenuDropDownOpen
					? ' visible opacity-100 translate-y-0 delay-300 '
					: ' invisible opacity-0 -translate-y-[1rem] -z-1'
			} transition-all ease-linear duration-100 absolute top-[45px] left-0 bg-white shadow-shadow-custom w-[20rem] text-[1.5rem]`}
		>
			<div className=" relative">
				<Link href="/lai-suat-ngan-hang">
					<div className=" cursor-pointer hover:bg-blue-200 px-[20px] py-[10px]">
						Tất cả
					</div>
				</Link>
				<Link href="/lai-suat-ngan-hang/agribank">
					<div className=" cursor-pointer hover:bg-blue-200 px-[20px] py-[10px]">
						Agribank
					</div>
				</Link>
				<Link href="/lai-suat-ngan-hang/bidv">
					<div className=" cursor-pointer hover:bg-blue-200 px-[20px] py-[10px]">
						BIDV
					</div>
				</Link>
				<Link href="/lai-suat-ngan-hang/mbbank">
					<div className=" cursor-pointer hover:bg-blue-200 px-[20px] py-[10px]">
						MB
					</div>
				</Link>
				<Link href="/lai-suat-ngan-hang/scb">
					<div className=" cursor-pointer hover:bg-blue-200 px-[20px] py-[10px]">
						SCB
					</div>
				</Link>
				<Link href="/lai-suat-ngan-hang/vib">
					<div className=" cursor-pointer hover:bg-blue-200 px-[20px] py-[10px]">
						VIB
					</div>
				</Link>
				<Link href="/lai-suat-ngan-hang/vietcombank">
					<div className=" cursor-pointer hover:bg-blue-200 px-[20px] py-[10px]">
						Vietcombank
					</div>
				</Link>
				<Link href="/lai-suat-ngan-hang/vietinbank">
					<div className=" cursor-pointer hover:bg-blue-200 px-[20px] py-[10px]">
						Vietinbank
					</div>
				</Link>
			</div>
			<div className=" absolute bg-yellow-200 w-[20rem] h-[22px] -top-[22px] opacity-0 "></div>
		</div>
	);
}

function InterestRateDropdown() {
	const dropdownRef = useRef(null); // Create a reference for dropdown container
	const [isMenuDropDownOpen, setMenuDropDownOpen] = useState(false);

	const router = useRouter();

	// Function to close dropdown
	const closeHoverMenu = () => {
		setMenuDropDownOpen(false);
	};

	useOnHoverOutside(dropdownRef, closeHoverMenu); // Call the hook
	return (
		<div ref={dropdownRef} className=" relative flex flex-col items-center">
			<Link
				onMouseOver={() => setMenuDropDownOpen(true)}
				href="/lai-suat-ngan-hang"
				className="mr-[1rem] hover:opacity-80"
			>
				<div
					className={`flex items-center h-fit px-[1.5rem] py- text-center align-middle   cursor-pointer mx-1 ${
						router.pathname.includes('/lai-suat-ngan-hang')
							? 'text-blue-2'
							: ''
					}`}
				>
					<div>
						<svg
							width="19"
							height="17"
							viewBox="0 0 19 17"
							fill="none"
							xmlns="http://www.w3.org/2000/svg"
						>
							<g clipPath="url(#clip0_625_9)">
								<path
									d="M3.05475 6.8408C3.07626 6.8408 3.09582 6.8408 3.11733 6.8408C3.23466 6.8408 3.34808 6.84469 3.45759 6.85637C3.56515 6.86804 3.67074 6.88167 3.77634 6.90308C3.9719 6.93811 4.16158 6.9926 4.3454 7.06072C4.57029 7.14245 4.78149 7.2456 4.98095 7.37016V7.06072H5.1198C5.21562 7.06072 5.29971 7.00233 5.331 6.91475L5.53242 6.36009H6.88565L7.04991 6.92254C7.07533 7.00622 7.1516 7.06266 7.2396 7.06266H7.40191V13.7556H7.31782C7.22396 13.7556 7.13791 13.8139 7.10662 13.9035L6.91694 14.4289H5.52459L5.36815 13.8957C5.34273 13.812 5.26646 13.7556 5.17846 13.7556H4.98095V13.3585C4.70327 13.5317 4.40016 13.666 4.0775 13.7556C3.87803 13.812 3.67074 13.8509 3.45759 13.8723C3.44195 13.8723 3.4263 13.8762 3.41066 13.8762C3.31484 13.8859 3.21902 13.8879 3.11928 13.8879C3.11537 13.8918 3.11342 13.8996 3.11146 13.9054L2.92177 14.4309H2.4192C2.30382 14.4309 2.21191 14.5223 2.21191 14.6372V15.0225H18.1417V14.6274C18.1417 14.5204 18.0537 14.4328 17.9462 14.4328H17.471L17.3145 13.8996C17.2891 13.8159 17.2128 13.7594 17.1248 13.7594H16.9528V7.05877H17.0662C17.16 7.05877 17.2461 7.00038 17.2774 6.91086L17.4768 6.3562H18.1535V5.37533C18.1535 5.24688 18.0889 5.12622 17.9794 5.05616L10.167 0L2.37422 5.09897C2.28036 5.16125 2.22365 5.26634 2.22365 5.37922V6.3562H2.91591L3.05671 6.8408H3.05475ZM9.3594 13.8918C9.33398 13.8081 9.25771 13.7517 9.16971 13.7517H8.9683V7.05877H9.09149C9.18536 7.05877 9.2714 7.00038 9.30269 6.91086L9.50216 6.3562H10.8652L11.0294 6.91864C11.0549 7.00233 11.1311 7.05877 11.2191 7.05877H11.3951V13.7517H11.2973C11.2035 13.7517 11.1174 13.81 11.0861 13.8996L10.8965 14.425H9.51389L9.35745 13.8918H9.3594ZM15.0246 6.91864C15.05 7.00233 15.1263 7.05877 15.2143 7.05877H15.3864V13.7517H15.2729C15.1791 13.7517 15.093 13.81 15.0617 13.8996L14.8721 14.425H13.4993L13.3428 13.8918C13.3174 13.8081 13.2411 13.7517 13.1531 13.7517H12.9674V7.05877H13.0749C13.1688 7.05877 13.2548 7.00038 13.2861 6.91086L13.4856 6.3562H14.8584L15.0226 6.91864H15.0246ZM10.0947 1.44406C11.2211 1.40319 12.148 2.30038 12.148 3.41359C12.148 4.5268 11.2621 5.38311 10.167 5.38311C9.07194 5.38311 8.14306 4.45479 8.18999 3.3299C8.23301 2.31595 9.07585 1.47909 10.0947 1.44406Z"
									fill="#5646FF"
								/>
								<path
									d="M18.6757 15.3904H1.63712C1.45676 15.3904 1.31055 15.5359 1.31055 15.7154V16.5639C1.31055 16.7434 1.45676 16.8889 1.63712 16.8889H18.6757C18.8561 16.8889 19.0023 16.7434 19.0023 16.5639V15.7154C19.0023 15.5359 18.8561 15.3904 18.6757 15.3904Z"
									fill="#5646FF"
								/>
								<path
									d="M2.11961 9.76976C2.32885 9.76976 2.49898 9.60045 2.49898 9.39221C2.49898 9.18397 2.32885 9.01465 2.11961 9.01465C1.91037 9.01465 1.74023 9.18397 1.74023 9.39221C1.74023 9.60045 1.91037 9.76976 2.11961 9.76976Z"
									fill="#5646FF"
								/>
								<path
									d="M6.14234 10.3458C6.14234 8.65649 4.7676 7.28833 3.07215 7.28833C1.3767 7.28833 0 8.65649 0 10.3458C0 12.035 1.37474 13.4013 3.07215 13.4013C4.76956 13.4013 6.14234 12.0331 6.14234 10.3458ZM4.03232 12.1538C3.55712 12.1538 3.16993 11.7704 3.16993 11.2955C3.16993 10.8206 3.55517 10.4372 4.03232 10.4372C4.50947 10.4372 4.89471 10.8226 4.89471 11.2955C4.89471 11.7684 4.50947 12.1538 4.03232 12.1538ZM2.1198 8.53193C2.595 8.53193 2.98219 8.91533 2.98219 9.3902C2.98219 9.86506 2.595 10.2485 2.1198 10.2485C1.64461 10.2485 1.25741 9.86312 1.25741 9.3902C1.25741 8.91728 1.64461 8.53193 2.1198 8.53193ZM1.7287 11.9591C1.6583 11.9591 1.5879 11.9319 1.53314 11.8774C1.42363 11.7704 1.42363 11.5972 1.53314 11.4882L4.22005 8.81218C4.2748 8.75769 4.3452 8.73044 4.41756 8.73044C4.48991 8.73044 4.55836 8.75769 4.61311 8.81218C4.72067 8.92117 4.72067 9.09438 4.61311 9.20142L1.92425 11.8774C1.86949 11.93 1.79909 11.9591 1.7287 11.9591Z"
									fill="#5646FF"
								/>
								<path
									d="M4.03269 10.918C3.82345 10.918 3.65332 11.0873 3.65332 11.2955C3.65332 11.5038 3.82345 11.6731 4.03269 11.6731C4.24194 11.6731 4.41207 11.5057 4.41207 11.2955C4.41207 11.0853 4.24389 10.918 4.03269 10.918Z"
									fill="#5646FF"
								/>
								<path
									d="M10.1533 4.93168C11.0039 4.93168 11.6942 4.24468 11.6942 3.40004C11.6942 2.5554 11.0039 1.86646 10.1533 1.86646C9.30261 1.86646 8.61426 2.55345 8.61426 3.40004C8.61426 4.24662 9.30261 4.93168 10.1533 4.93168ZM9.53532 3.93524C9.65851 4.11818 9.86385 4.20965 10.1552 4.20965C10.3684 4.20965 10.4759 4.11428 10.4759 3.92745C10.4759 3.86712 10.4583 3.81457 10.4251 3.76981C10.3899 3.727 10.3449 3.69197 10.2921 3.66472C10.2374 3.63942 10.1767 3.61217 10.1102 3.58882C10.0438 3.56352 9.97727 3.53433 9.91273 3.50513C9.84625 3.47205 9.78758 3.43702 9.73087 3.3942C9.67611 3.35139 9.63309 3.29495 9.59789 3.22099C9.56465 3.14898 9.54705 3.0653 9.54705 2.96799C9.54705 2.84343 9.59007 2.72861 9.68003 2.62935C9.76802 2.53205 9.88536 2.46393 10.0359 2.43085V2.38998C10.0359 2.27904 10.0222 2.20314 9.99291 2.16811L9.99682 2.16227H10.3703L10.3742 2.16811C10.3488 2.20704 10.3371 2.27904 10.3371 2.38998V2.41333C10.4505 2.41917 10.5698 2.43668 10.691 2.46198L10.7243 2.90182H10.7184C10.6089 2.77143 10.4446 2.7072 10.2217 2.7072C10.1239 2.7072 10.0496 2.72666 9.99878 2.76753C9.94793 2.8084 9.92251 2.86484 9.92251 2.93685C9.92251 2.99718 9.94011 3.04778 9.97336 3.08865C10.0086 3.13147 10.0535 3.16455 10.1083 3.1918C10.163 3.2171 10.2256 3.24435 10.2921 3.2677C10.3586 3.293 10.4251 3.32025 10.4916 3.34944C10.5581 3.38058 10.6167 3.41756 10.6734 3.46037C10.7282 3.50319 10.7751 3.56352 10.8084 3.63553C10.8436 3.71143 10.8612 3.79706 10.8612 3.89631C10.8612 4.04617 10.8103 4.17656 10.7086 4.28749C10.607 4.39843 10.4759 4.46654 10.3117 4.49184V4.50741C10.3117 4.61834 10.3234 4.69035 10.3488 4.72928L10.3449 4.73511H9.9714L9.96749 4.72928C9.99682 4.69035 10.0105 4.6164 10.0105 4.50741V4.49574C9.85016 4.48406 9.70545 4.45097 9.57638 4.39648L9.52749 3.93913L9.53336 3.93524H9.53532Z"
									fill="#5646FF"
								/>
							</g>
							{/* <defs>
								<clipPath id="clip0_625_9">
									<rect
										width="19"
										height="16.8889"
										fill="white"
									/>
								</clipPath>
							</defs> */}
						</svg>
					</div>
					<div className=" mt-[2px]  text-[1.4rem] font-medium text-grey  mx-[9px]">
						Lãi suất
					</div>
					<div
						className={`${
							isMenuDropDownOpen ? 'rotate-180' : 'rotate-0'
						} transition-transform ease-in-out duration-500`}
					>
						<svg
							width="8"
							height="4"
							viewBox="0 0 8 4"
							fill="none"
							xmlns="http://www.w3.org/2000/svg"
						>
							<path
								d="M0 0.52605C0.0795644 0.327095 0.271252 0.205886 0.445235 0.0763666C0.587271 -0.0294311 0.817825 -0.0186955 0.965965 0.0820807C1.00035 0.105457 1.0319 0.132122 1.06323 0.158788C2.01821 0.971231 2.97319 1.78367 3.92755 2.59664C3.94933 2.61516 3.96459 2.63923 3.98575 2.66417C4.02319 2.63386 4.04558 2.61638 4.06715 2.59802C5.02945 1.77935 5.99175 0.960496 6.95426 0.141992C7.126 -0.00397734 7.33763 -0.048305 7.50937 0.0606095C7.66749 0.160866 7.81034 0.28623 7.9306 0.41956C8.04354 0.544924 8.01037 0.713923 7.89071 0.837902C7.8726 0.856603 7.85327 0.874784 7.83313 0.891926C6.67039 1.88151 5.50785 2.87091 4.34491 3.86032C4.17072 4.00854 3.96764 4.04075 3.77982 3.94759C3.73342 3.92456 3.69171 3.89253 3.65345 3.85997C2.4899 2.87091 1.32655 1.8822 0.166454 0.890368C0.0960471 0.830283 0.0547387 0.74561 0 0.672366V0.526223V0.52605Z"
								fill="#434A54"
							/>
						</svg>
					</div>
				</div>
			</Link>
			{/* {isMenuDropDownOpen && (
				<Menu isMenuDropDownOpen={isMenuDropDownOpen} />
			)} */}
			<Menu isMenuDropDownOpen={isMenuDropDownOpen} />
		</div>
	);
}

export default InterestRateDropdown;
